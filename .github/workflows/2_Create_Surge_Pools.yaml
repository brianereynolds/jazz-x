name: 2. Create Surge Pools

concurrency:
  group: np-maintenance-group

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Target Kubernetes version"
        required: false
      colour:
        description: "Colour of surge pools to create"
        required: true
        type: choice
        options:
          - blue
          - green

jobs:
  do_create:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v3

      - name: Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube/
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config

      - name: Execute
        run: |
          SUB_ID=${{ vars.SUB_ID }}
          RESOURCE_GROUP=${{ vars.RESOURCE_GROUP }}
          CLUSTER_NAME=${{ vars.CLUSTER_NAME }}
          K8S_VERSION=${{ inputs.version }}
          COLOUR=${{ inputs.colour }}
          
          cat <<EOF | kubectl apply -n operations -f -
          apiVersion: k8smanagers.greyridge.com/v1
          kind: NodePoolManager
          metadata:
            labels:
              app.kubernetes.io/name: nodepoolmanager
              app.kubernetes.io/managed-by: kustomize
            name: surge-pools
          spec:
            subscriptionId: $SUB_ID
            resourceGroup: $RESOURCE_GROUP
            clusterName: $CLUSTER_NAME
            nodePools:
              - name: cntrl$COLOUR
                properties: {
                  vmSize: Standard_DS2_v2,
                  minCount: 1,
                  maxCount: 1,
                  enableAutoScaling: true,
                  orchestratorVersion: $K8S_VERSION,
                }
              - name: svcs$COLOUR
                properties: {
                  vmSize: Standard_DS2_v2,
                  minCount: 1,
                  maxCount: 3,
                  enableAutoScaling: true,
                  orchestratorVersion: $K8S_VERSION,
                }
          EOF

      - name: Wait for pools to be created
        run: |
          COLOUR=${{ inputs.colour }}
          POOLS=("cntrl" "svcs")
          
          for POOL in "${POOLS[@]}"; do
            NODEPOOL_NAME=$POOL$COLOUR
          
            while ! kubectl get nodes | grep "$NODEPOOL_NAME"; do
              echo "Waiting for node pool '$NODEPOOL_NAME' to be created..."
              sleep 30
            done
  
            while kubectl get nodes -o json | jq -r '.items[] | select(.metadata.labels["agentpool"]=="'"$NODEPOOL_NAME"'") | .status.conditions[] | select(.type=="Ready").status' | grep -v "True"; do
              echo "Waiting for node pool '$NODEPOOL_NAME' to become ready..."
              sleep 30
            done
 
            echo "Node pool $NODEPOOL_NAME has been created with version ${{ inputs.version }} !"
          done

      - name: Cleanup
        run: |
          kubectl -n operations delete nodepoolmanager.k8smanagers.greyridge.com/surge-pools

